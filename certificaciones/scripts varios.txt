hola, tengo una base de datos llamada certificaciones_DB en postgres 16, dentro del esquema esta cursos, dentro de cursos estan las siguientes tablas:
certificaciones columnas:

id_idcertificacion: integer, llave primaria.
id_usuario: integer, llave foránea curso.usuarios id.
curso_id: integer, llave foránea curso.curso id_curso.
valor_unico: varchard, llave única.
completado: boolean.
nota: integer.
fecha_inscripcion: timestamp.
cursos columnas:

id_curso: integer.
promotor: varchar.
modalidad: varchar.
nombre_curso: varchar.
descripcion: text.
duracion: interval.
periodo: date.
tipo_evaluacion: boolean.
tipo_curso: varchar.
autorizacion: varchar.
limite_inscripciones: integer.
estado: boolean.
roles columnas:

id_rol: integer, llave primaria.
nombre_rol: varchar.
usuarios columnas:

id: integer, llave primaria.
nombre: varchar.
apellido: varchar.
correo: varchar, llave única.
password: text.
cedula: varchar, llave única.
id_rol: integer, llave foránea curso.roles id_rol.
token: varchar(255).
confirmado: boolean.
auditoria columnas:

id_auditoria: integer.
usuario: varchar.
accion: varchar.
tabla_afectada: varchar.
fecha: timestamp.
dato_previo: text.
dato_modificado: text.

asi esta formada la base de datos.

y esto es un esquema de como estan organizados mis archivos:

certificaciones/
├── config/
│   └── model.php
├── controllers/
│   ├── asignar_nota.php
│   ├── autenticacion.php
│   ├── curso_acciones.php
│   ├── curso_controlador.php
|   ├── usuarios_controlador.php
|   └── actualizar_estado.php
├── models/
│   ├── curso.php
│   ├── datos_usuario.php
│   └── obtener_cursos.php
├── public/
│   ├── assets/
│   │   └── estilo.css
│   ├── cursos.php
│   ├── gestion_cursos.php
│   ├── index.php
│   ├── perfil.php
│   ├── detallles_curso.php
|   ├── usuario.php
│   └── editar_cursos.php
└── views/
    ├── curso_formulario.html
    ├── curso.php
    ├── historial.php
    ├── footer.php
    └── header.php


crear tabla auditoria:

CREATE TABLE cursos.auditoria (
    id_auditoria SERIAL PRIMARY KEY,
    usuario VARCHAR(255) NOT NULL,
    accion VARCHAR(20) NOT NULL,
    tabla_afectada VARCHAR(50) NOT NULL,
    fecha TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    dato_previo TEXT,
    dato_modificado TEXT
);

CREATE OR REPLACE FUNCTION cursos_audit() RETURNS TRIGGER AS $$
DECLARE
    accion_texto VARCHAR(10);
    usuario_sistema INTEGER;
BEGIN
    -- Obtener el ID del usuario del sistema desde una variable de configuración
    SELECT current_setting('myapp.current_user_id', true)::INTEGER INTO usuario_sistema;

    IF TG_OP = 'DELETE' THEN
        accion_texto := 'DELETE';
    ELSIF TG_OP = 'UPDATE' THEN
        accion_texto := 'UPDATE';
    ELSE
        accion_texto := 'INSERT';
    END IF;

    INSERT INTO cursos.auditoria (usuario, accion, tabla_afectada, fecha, dato_previo, dato_modificado)
    VALUES (usuario_sistema, accion_texto, TG_TABLE_NAME, now(), OLD::text, NEW::text);

    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- Crear el trigger para la tabla certificaciones
CREATE TRIGGER certificaciones_trigger
AFTER INSERT OR UPDATE OR DELETE ON cursos.certificaciones
FOR EACH ROW EXECUTE FUNCTION cursos_audit();

-- Crear el trigger para la tabla cursos
CREATE TRIGGER cursos_trigger
AFTER INSERT OR UPDATE OR DELETE ON cursos.cursos
FOR EACH ROW EXECUTE FUNCTION cursos_audit();

-- Crear el trigger para la tabla roles
CREATE TRIGGER roles_trigger
AFTER INSERT OR UPDATE OR DELETE ON cursos.roles
FOR EACH ROW EXECUTE FUNCTION cursos_audit();

-- Crear el trigger para la tabla usuarios
CREATE TRIGGER usuarios_trigger
AFTER INSERT OR UPDATE OR DELETE ON cursos.usuarios
FOR EACH ROW EXECUTE FUNCTION cursos_audit();

Tu estructura actual es bastante buena, pero hay algunas mejoras que podrías considerar para hacerla más clara y modular:

config/
model.php: Perfecto para la configuración de la base de datos y funciones comunes.
controllers/
asignar_nota.php: Está bien aquí, pero podrías renombrarlo a algo más general como NotasController.php para seguir una convención de nombres.
autenticacion.php: Podrías renombrarlo a AuthController.php para mantener consistencia.
curso_acciones.php: Podrías fusionarlo con curso_controlador.php si las acciones son específicas de los cursos.
curso_controlador.php: Renombrarlo a CursosController.php para seguir la convención.
usuarios_controlador.php: Renombrarlo a UsuariosController.php.
actualizar_estado.php: Podría ser parte de CursosController.php o UsuariosController.php dependiendo de qué estado estás actualizando.
models/
curso.php: Perfecto aquí.
datos_usuario.php: Podrías renombrarlo a Usuario.php para seguir la convención de nombres.
obtener_cursos.php: Podrías fusionarlo con curso.php si es específico de los cursos.
public/
assets/: Perfecto aquí.
estilo.css: Perfecto aquí.
cursos.html: Podrías moverlo a la carpeta views si es una vista.
gestion_cursos.php: Podrías moverlo a la carpeta views si es una vista.
index.php: Perfecto aquí.
perfil.php: Podrías moverlo a la carpeta views si es una vista.
detallles_curso.php: Podrías moverlo a la carpeta views si es una vista.
usuario.php: Podrías moverlo a la carpeta views si es una vista.
editar_cursos.php: Podrías moverlo a la carpeta views si es una vista.
views/
curso_formulario.html: Perfecto aquí.
curso.php: Perfecto aquí.
footer.php: Perfecto aquí.
header.php: Perfecto aquí.
Sugerencias adicionales:
Separación de lógica y presentación: Asegúrate de que la lógica de negocio esté en los controladores y modelos, y la presentación en las vistas.
Convenciones de nombres: Usar nombres consistentes y en inglés puede ayudar a mantener la claridad y la coherencia.
¿Te gustaría ayuda con algún aspecto específico de la reorganización o tienes alguna otra pregunta?